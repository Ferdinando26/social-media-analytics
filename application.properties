#spring.datasource.url=jdbc:postgresql://localhost:5432/socialmediaanalytics
#spring.datasource.username=admin
#spring.datasource.password=12345
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=com.menk.socialmediaanalytics.model.SocialMediaPost
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.auto-offset-reset=earliest
spring.security.oauth2.client.registration.linkedin.client-id=your-client-id
spring.security.oauth2.client.registration.linkedin.client-secret=your-client-secret
spring.security.oauth2.client.registration.linkedin.scope=r_liteprofile,r_emailaddress,w_member_social
spring.security.oauth2.client.registration.linkedin.redirect-uri={baseUrl}/login/oauth2/code/linkedin
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
spring.security.oauth2.client.provider.linkedin.jwk-set-uri=https://www.linkedin.com/oauth/v2/jwks

